package pw.adithya.SPLT.adapters;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.support.v7.widget.CardView;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import com.google.gson.Gson;import java.util.ArrayList;import pw.adithya.SPLT.R;import pw.adithya.SPLT.activities.CreateActivity;import pw.adithya.SPLT.activities.SummaryActivity;import pw.adithya.SPLT.objects.Bill;import pw.adithya.SPLT.objects.Combined;import pw.adithya.SPLT.objects.Extra;import pw.adithya.SPLT.objects.Participant;/** * Created by adithya on 17/11/17. */public class MainAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>{    Activity activity;    ArrayList<Combined> combinedArrayList;    public class MyViewHolder extends RecyclerView.ViewHolder implements View.OnCreateContextMenuListener {        public TextView titleTextView, dateTextView;        public RecyclerView recyclerView;        public CardView mainCardView;        public int[] colorArray = {R.color.green_sea, R.color.nephritis, R.color.belize_hole, R.color.wisteria, R.color.midnight_blue, R.color.orange, R.color.pumpkin, R.color.pomogrenate};        public View dummyView;        SharedPreferences.Editor editor;        Gson gson;        public MyViewHolder(View view) {            super(view);            titleTextView = view.findViewById(R.id.textview_title);            dateTextView = view.findViewById(R.id.textview_date);            recyclerView = view.findViewById(R.id.recyclerview_main_child);            mainCardView = view.findViewById(R.id.cardview_main);            dummyView = view.findViewById(R.id.view);            editor = activity.getSharedPreferences("app", Context.MODE_PRIVATE).edit();            gson = new Gson();            view.setOnCreateContextMenuListener(this);        }        private final MenuItem.OnMenuItemClickListener onEditMenu = new MenuItem.OnMenuItemClickListener() {            @Override            public boolean onMenuItemClick(MenuItem item) {                switch (item.getItemId()) {                    case 1:                        activity.startActivity(new Intent(activity, CreateActivity.class).putExtra("from", "main").putExtra("pos", item.getOrder()));                        break;                    case 2:                        combinedArrayList.remove(item.getOrder());                        editor.putString("combinedArrayList", gson.toJson(combinedArrayList));                        editor.apply();                        editor.commit();                        notifyItemRemoved(item.getOrder());                        break;                    case 3:                        break;                }                return true;            }        };        @Override        public void onCreateContextMenu(android.view.ContextMenu contextMenu, View view, android.view.ContextMenu.ContextMenuInfo contextMenuInfo) {            MenuItem Edit = contextMenu.add(Menu.NONE, 1, getAdapterPosition(), "Edit");            MenuItem Delete = contextMenu.add(Menu.NONE, 2, getAdapterPosition(), "Delete");            MenuItem Share = contextMenu.add(Menu.NONE, 3, getAdapterPosition(), "Share");            Edit.setOnMenuItemClickListener(onEditMenu);            Delete.setOnMenuItemClickListener(onEditMenu);            Share.setOnMenuItemClickListener(onEditMenu);        }    }    public MainAdapter(ArrayList combinedArrayList, Activity activity) {        this.combinedArrayList = combinedArrayList;        this.activity = activity;    }    @Override    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {        View view = LayoutInflater.from(parent.getContext())                .inflate(R.layout.child_main, parent, false);        return new MyViewHolder(view);    }    @Override    public void onBindViewHolder(RecyclerView.ViewHolder holder, final int position) {        final MyViewHolder vh = (MyViewHolder) holder;        final ArrayList<Participant> participantsArrayList = combinedArrayList.get(position).participantsArrayList;        final ArrayList<Extra> extrasArrayList = combinedArrayList.get(position).extrasArrayList;        final ArrayList<Bill> billsArrayList = combinedArrayList.get(position).billsArrayList;        LinearLayoutManager layoutManager = new LinearLayoutManager(activity);        MainSummaryAdapter mainSummaryAdapter = new MainSummaryAdapter(participantsArrayList, activity, combinedArrayList.get(position).extras);        vh.recyclerView.setLayoutManager(layoutManager);        vh.recyclerView.setHasFixedSize(true);        vh.recyclerView.setAdapter(mainSummaryAdapter);        vh.titleTextView.setText(combinedArrayList.get(position).title);        vh.dateTextView.setText(combinedArrayList.get(position).date);        int colorInt = position;        if (colorInt >= vh.colorArray.length)            colorInt -= vh.colorArray.length;        vh.mainCardView.setCardBackgroundColor(activity.getResources().getColor(vh.colorArray[colorInt]));        vh.dummyView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                SummaryActivity.participantsArrayList = participantsArrayList;                SummaryActivity.billName = combinedArrayList.get(position).title;                SummaryActivity.participants = String.valueOf(participantsArrayList.size());                double extras = 0.0;                if (extrasArrayList.size() != 0) {                    for (Extra e : extrasArrayList) {                        extras += e.percentage;                    }                }                SummaryActivity.extras = extras;                SummaryActivity.total = combinedArrayList.get(position).total;                SummaryActivity.bills = String.valueOf(billsArrayList.size());                Combined combined = new Combined();                combined.billsArrayList = billsArrayList;                combined.extrasArrayList = extrasArrayList;                combined.participantsArrayList = participantsArrayList;                combined.title = combinedArrayList.get(position).title;                combined.date = combinedArrayList.get(position).date;                combined.extras = extras;                combinedArrayList.add(combined);                activity.startActivity(new Intent(activity, SummaryActivity.class));            }        });        /*vh.dummyView.setOnLongClickListener(new View.OnLongClickListener() {            @Override            public boolean onLongClick(View view) {                ContextMenu menu = new ContextMenu.Builder(activity)                        .setContextMenuView(R.layout.context_menu)                        .build();                menu.clipToView(vh.dummyView);                return false;            }        });*/    }    @Override    public int getItemCount() {        if (combinedArrayList == null)            return 0;        else            return combinedArrayList.size();    }}